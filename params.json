{"name":"My-prototypes","tagline":"Add Array, Numbers, Object and String prototypes in your project.","body":"[![NPM](https://nodei.co/npm/my-prototypes.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/my-prototypes/)\r\n\r\n[![](https://img.shields.io/badge/version-BETA%20--%20in%20porgress-red.svg)](https://www.npmjs.com/package/my-prototypes)\r\n\r\n[![](https://img.shields.io/badge/autor-Marco%20Somma-lightgrey.svg?style=flat)](https://www.npmjs.com/~marcosomma) [![](https://img.shields.io/badge/license-ISC-blue.svg?style=flat)](https://www.npmjs.com/package/my-prototypes) [![npm](https://img.shields.io/npm/dm/my-prototypes.svg)](https://www.npmjs.com/package/my-prototypes)\r\n\r\n[![npm version](https://badge.fury.io/js/my-prototypes.svg)](http://badge.fury.io/js/my-prototypes) [![Codacy Badge](https://www.codacy.com/project/badge/ac6c42fb818542abaad4fb0fd05f39f1)](https://www.codacy.com/public/makso1979/my-prototypes) [![Code Climate](https://codeclimate.com/github/marcosomma/my-prototypes/badges/gpa.svg)](https://codeclimate.com/github/marcosomma/my-prototypes) [![Test Coverage](https://codeclimate.com/github/marcosomma/my-prototypes/badges/coverage.svg)](https://codeclimate.com/github/marcosomma/my-prototypes) [![CircleCI branch](https://img.shields.io/circleci/project/marcosomma/my-prototypes/master.svg)](https://circleci.com/gh/marcosomma/my-prototypes/tree/master)\r\n\r\n# my-prototypes\r\nAdd Array, Numbers, Object and String prototypes in your project.\r\n\r\n### Install\r\n ``` npm install my-prototypes ``` \r\n\r\n### Use\r\n ```  require('my-prototypes').init()  ``` \r\n\r\n***\r\n\r\n- ## Array prototypes\r\n\t- first\r\n\t- last\r\n\t- containElement\r\n\t- eliminateDuplicate\r\n\t- remove\r\n\t- generateScale\r\n\t- even\r\n\t- evenIndex\r\n\t- odd\r\n\t- oddIndex\r\n\r\n\t- ### first\r\n\t\t*First element in an array*\r\n\r\n\t\t ```  [1,2,3,3,4,5,6,7,8,8,9,6,5,4].first()  ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` 1 ```\r\n\r\n\t- ### last\r\n\t\t*Last element in an array*\r\n\r\n\t\t ``` [1,2,3,3,4,5,6,7,8,8,9,6,5,4].last() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` 4 ```\r\n\r\n\t- ### containElement\r\n\t\t*check if an array contain an element*\r\n\r\n\t\t ``` [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].containElement(\"A\") ```\r\n\r\n\t\t result\r\n\r\n\t\t ```  true  ```\r\n\r\n\t- ### eliminateDuplicate\r\n\t\t*Eliminate all element duplicated in an array*\r\n\r\n\t\t ``` [1,2,3,3,4,5,6,7,8,8,9,6,5,4].even() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` [1,2,3,4,5,6,7,8,9] ```\r\n\r\n\t- ### remove(element/[elements])\r\n\t\t*Remove elements in an array*\r\n\r\n\t\t- example 1\r\n\r\n\t\t\t ``` [1,2,3,3].remove(3) ```\r\n\r\n\t\t\tresult\r\n\r\n\t\t\t ``` [1,2] ```\r\n\r\n\t\t- example 2\r\n\r\n\t\t\t ``` [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"].remove([\"A\",\"B\",\"C\"]) ```\r\n\r\n\t\t\tresult\r\n\r\n\t\t\t ``` [\"D\",\"E\",\"F\"] ```\r\n\r\n\t- ### generateScale(type,style,start,end,interval)\r\n\t\t*generate an array of specific element*\r\n\r\n\t\t- example 1\r\n\r\n\t\t\t ``` var myarray = Array().generateScale('letters','upper','a','c',null) ```\r\n\r\n\t\t\tresult\r\n\r\n\t\t\t ``` [\"A\",\"B\",\"C\"] ```\r\n\r\n\t\t- example 2\r\n\r\n\t\t\t ``` var myarray = Array().generateScale('letters','lower','a','f',2) ```\r\n\r\n\t\t\tresult\r\n\r\n\t\t\t ``` [\"a\",\"c\",\"e\"] ```\r\n\r\n\t\t- example 3\r\n\r\n\t\t\t ``` var myarray = Array().generateScale('numbers',null,0,9,3) ```\r\n\r\n\t\t\tresult\r\n\r\n\t\t\t ``` [0,3,6,9] ```\r\n\r\n\t\t- example 4\r\n\r\n\t\t\t ``` var myarray = Array().generateScale('numbers',null,-9,0,1) ```\r\n\r\n\t\t\tresult\r\n\r\n\t\t\t ``` [-9,-8,-7,-6,-5,-4,-3,-2,-1,0] ```\r\n\r\n\t- ### even\r\n\t\t*Take all even numbers in an array*\r\n\r\n\t\t ``` [1,2,3,3,4,5,6,7,8,8,9,6,5,4].even() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` [2,4,6,8,8,6,4] ```\r\n\r\n\t- ### evenIndex\r\n\t\t*Take all even index in an array*\r\n\r\n\t\t ``` [\"a\",\"A\",\"b\",\"B\",\"c\",\"C\",\"d\",\"D\",\"e\",\"E\",\"f\",\"F\"].evenIndex() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"] ```\r\n\r\n\t- ### odd\r\n\t\t*Take all odd numbers in an array*\r\n\r\n\t\t ``` [1,2,3,3,4,5,6,7,8,8,9,6,5,4].odd() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` [1,3,3,5,7,9,5] ```\r\n\r\n\t- ### oddIndex\r\n\t\t*Take all odd index in an array*\r\n\r\n\t\t ``` [\"a\",\"A\",\"b\",\"B\",\"c\",\"C\",\"d\",\"D\",\"e\",\"E\",\"f\",\"F\"].oddIndex() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"] ```\r\n\r\n***\r\n\r\n- ## Number prototypes\r\n\t- formatMoney\r\n\t- getSecond\r\n\t- getMilliSecond\r\n\t- isEven\r\n\r\n\t- ### formatMoney(decimals)\r\n\t\t*Convert integer o float number in a money value*\r\n\r\n\t\t ``` 1000000.12.formatMoney(2) ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` \"1,000,000.12\" ```\r\n\r\n\t- ### getSecond(hours,minutes,seconds)\r\n\t\t*Return seconds*\r\n\r\n\t\t ``` Number().getSecond(1,1,1) ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` 3661 ```\r\n\r\n\t- ### getMilliSecond(hours,minutes,seconds)\r\n\t\t*Return milliseconds*\r\n\r\n\t\t ``` Number().getMilliSecond(1,1,1) ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` 3661000 ```\r\n\r\n\t- ### isEven\r\n\t\t*Check is the number is even*\r\n\r\n\t\t ``` var n = 124; ```\r\n\r\n\t\t ``` n.isEven() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` true ```\r\n\r\n***\r\n\r\n- ## Object prototypes\r\n\t- concatElements\r\n\t- generator\r\n\t- lengthObject\r\n\t- splitElements\r\n\t- toArray\r\n\r\n\t- ### concatElements([{key1:value1},{key2:value2},{key3:value3}])\r\n\t\t*Concat more Objects in a single Object.git tag*\r\n\r\n\t\t ``` Object().concatElements([{key1:'value1'},{key2:'value2'},{key3:'value3'}]) ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` {key1:\"value1\",key2:\"value2\",key3:\"value3\"} ```\r\n\r\n\t- ### generator([key,value,key2,value2,key3,value3.....])\r\n\t\t*Generate Objects from an array*\r\n\r\n\t\t ``` Object().generator([\"key1\",\"value1\",\"key2\",{subkey1:\"subvalue1\",subkey2:\"subvalue2\"},\"key3\",[\"subvalue1\",\"subvalue2\"]]) ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` {key1:\"value1\",key2:{subkey1:\"subvalue1\",subkey2:\"subvalue2\"},key3:[\"subvalue1\",\"subvalue2\"]} ```\r\n\r\n\t- ### lengthObject\r\n\t\t*Count elements*\r\n\r\n\t\t ```  var a = {key1:\"value1\",key2:\"value2\",key3:\"value3\",key4:\"value4\",key5:\"value5\"};  ```\r\n\r\n\t\t ``` a.length() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` 5 ```\r\n\r\n\t- ### splitElements\r\n\t\t*Split element in an array of single elements*\r\n\r\n\t\t ``` var a = {key1:\"value1\",key2:\"value2\",key3:\"value3\"}; ```\r\n\r\n\t\t ``` a.splitElements() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` [{key1:'value1'},{key2:'value2'},{key3:'value3'}] ```\r\n\r\n\t- ### toArray\r\n\t\t*Generate an array with object values*\r\n\r\n\t\t``` var o = {key1:\"value1\",key2:{subkey1:\"subvalue1\",subkey2:\"subvalue2\"},key3:[\"subvalue1\",\"subvalue2\"]}; ```\r\n\r\n\t\t``` o.toArray(); ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` [\"value1\",{subkey1:\"subvalue1\",subkey2:\"subvalue2\"},[\"subvalue1\",\"subvalue2\"]] ```\r\n\r\n***\r\n\r\n- ## String prototypes\r\n\t- capitalize\r\n\t- capitalizeAll\r\n\t- getDateEU\r\n\t- getDateUS\r\n\t- getDbDate\r\n\t- getDbDateTime\r\n\t- htmlEscape (exclude \":\", \";\" and \"#\")\r\n\t- htmlUnescape (exclude \":\", \";\" and \"#\")\r\n\t- repeat\r\n\t- reverseWord\r\n\t- substringAfterTo\r\n\t- substringBeforeTo\r\n\t- validateContent (dateEU, dateUS, time, email, ip-address, alphanumeric and phone)\r\n\r\n\t- ### capitalize\r\n\t\t*Capitalize first letter in a word*\r\n\r\n\t\t ``` 'test'.capitalize() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` \"Test\" ```\r\n\r\n\t- ### capitalizeAll\r\n\t\t*Capitalize all first letters of all word contained in a sentence separate by space*\r\n\r\n\t\t ``` 'test test Test test'.capitalizeAll() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` \"Test Test Test Test\" ```\r\n\r\n\t- ### getDateEU\r\n\t\t*Convert  ``` new Date ```  in european format date*\r\n\r\n\t\t ``` String(new Date).getDateEU() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` dd/mm/yyyy ```\r\n\r\n\t- ### getDateUS\r\n\t\t*Convert  ``` new Date ```  in american format date*\r\n\r\n\t\t ``` String(new Date).getDateUS() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` mm/dd/yyyy ```\r\n\r\n\t- ### getDbDate\r\n\t\t*Convert Database formar date  ``` 2015-03-18T16:23:18.423Z ```  in european format date*\r\n\r\n\t\t ``` '2015-03-18T16:23:18.423Z'.getDbDate() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` dd/mm/yyyy ```\r\n\r\n\t- ### getDbDateTime\r\n\t\t*Convert Database formar date  ``` 2015-03-18T16:23:18.423Z ```  in european format date and time*\r\n\r\n\t\t ``` '2015-03-18T16:23:18.423Z'.getDbDateTime() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` dd/mm/yyyy - hh:mm:ss ```\r\n\r\n\t- ### htmlEscape\r\n\t\t*Convert normal string in a html string*\r\n\r\n\t\t ``` 'Marco&Co'.htmlEscape() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` Marco&#38;Co ```\r\n\r\n\t- ### htmlUnescape\r\n\t\t*Convert html string in a normal string*\r\n\r\n\t\t ``` 'Marco&#38;Co'.htmlUnescape() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` Marco&Co ```\r\n\r\n\t- ### repeat\r\n\t\t*Repeat a word 'n' times*\r\n\r\n\t\t ``` 'test0'.repeat(3) ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` \"test0test0test0\" ```\r\n\r\n\t- ### reverseWord\r\n\t\t*Reverse a word*\r\n\r\n\t\t ``` 'test0'.reverseWord() ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` \"0tset\" ```\r\n\r\n\t- ### substringBeforeTo\r\n\t\t*Return substring before an symbol*\r\n\r\n\t\t ``` 'test0.test1'.substringBeforeTo('.') ```\r\n\r\n\t\tresult\r\n\r\n\t\t ``` \"test0\" ```\r\n\r\n\t- ### substringAfterTo\r\n\t\t*Return substring after an symbol if the symbol is contained more times return an array*\r\n\r\n\t\t- example 1\r\n\r\n\t\t\t``` 'test0.test1'.substringAfterTo('.') ```\r\n\r\n\t\t\tresult\r\n\r\n\t\t\t ``` \"test1\" ```\r\n\r\n\t\t- example 2\r\n\r\n\t\t\t``` 'test0.test1.test2.test3'.substringAfterTo('.') ```\r\n\r\n\t\t\tresult\r\n\r\n\t\t\t``` [\"test1\",\"test2\",\"test3\"] ```\r\n\r\n\t- ### validateContent\r\n\t\t*Validate content in a string*\r\n\r\n\t\t- example 1\r\n\r\n\t\t\t ``` 'mak.so1979@gmail.com'.validateContent('email') ```\r\n\r\n\t\t\tresult\r\n\r\n\t\t\t ``` true ```\r\n\r\n\t\t- example 2\r\n\r\n\t\t\t ``` 'mak.so1979gmailcom'.validateContent('email') ```\r\n\r\n\t\t\tresult\r\n\r\n\t\t\t ``` false ```\r\n\r\n\r\n***\r\n### License ISC\r\n*Copyright (c) 2015, Marco Somma.*\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.","google":"UA-60924417-1","note":"Don't delete this file! It's used internally to help with page regeneration."}