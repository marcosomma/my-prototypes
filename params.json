{"name":"My-prototypes","tagline":"String and Numbers prototypes","body":"[![Code Climate](https://codeclimate.com/github/marcosomma/my-prototypes/badges/gpa.svg)](https://codeclimate.com/github/marcosomma/my-prototypes) [![Test Coverage](https://codeclimate.com/github/marcosomma/my-prototypes/badges/coverage.svg)](https://codeclimate.com/github/marcosomma/my-prototypes)\r\n# my-prototypes\r\nAdd String and Numbers prototypes in your project.\r\n\r\n**Install**\r\n```npm install my-prototypes```\r\n\r\n**Use**\r\n``` require('my-prototypes').init ```\r\n\r\n***\r\n\r\n## String prototypes\r\n- capitalize\r\n- capitalizeAll\r\n- htmlEscape\r\n- htmlUnescape\r\n- repeat\r\n- substringAfterTo\r\n- substringBeforeTo\r\n- validateContent (dateEU, dateUS, time, email, ip-address, alphanumeric and phone)\r\n\r\n**capitalize**\r\n\r\n```String('test').capitalize()``` result ```\"Test\"```\r\n\r\n**capitalizeAll**\r\n\r\n```String('test test Test test').capitalizeAll()``` result ```\"Test Test Test Test\"```\r\n\r\n**htmlEscape**\r\n\r\n```String('Marco&Co').htmlEscape()``` result ```Marco&amp;Co```\r\n\r\n**htmlUnescape**\r\n\r\n```String('Marco&amp;Co').htmlUnescape()``` result ```Marco&Co```\r\n\r\n**repeat**\r\n\r\n```String('test0').repeat(3)``` result ```\"test0test0test0\"```\r\n\r\n**substringBeforeTo**\r\n\r\n```String('test0.test1').substringBeforeTo('.')``` result ```\"test0\"```\r\n\r\n**substringAfterTo**\r\n\r\n```String('test0.test1').substringAfterTo('.')``` result ```\"test1\"```\r\n```String('test0.test1.test2.test3').substringAfterTo('.')``` result ```[\"test1\",\"test2\",\"test3\"]```\r\n\r\n**validateContent**\r\n\r\n```String('mak.so1979@gmail.com').validateContent('email')``` result ```true```\r\n```String('mak.so1979gmailcom').validateContent('email')``` result ```false```\r\n\r\n***\r\n\r\n## Number prototypes\r\n- formatMoney\r\n- getSecond\r\n- getMilliSecond\r\n\r\n**formatMoney**( decimals, simbol1, simbol2 )\r\n\r\n```Number(1000000.12).formatMoney(2,',','.')``` result ```\"1,000,000.12\"```\r\n```Number(1000000.12).formatMoney(1,'/','-')``` result ```\"1/000/000-1\"```\r\n\r\n**getSecond**( hours, minutes, seconds )\r\n\r\n```Number().getSecond(1,1,1)``` result ```3661```\r\n\r\n**getSecond**( hours, minutes,secods )\r\n\r\n```Number().getMilliSecond(1,1,1)``` result ```3661000```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}